<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:c="http://www.springframework.org/schema/c"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/data/mongo
		http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
		 http://www.springframework.org/schema/cache
		  http://www.springframework.org/schema/cache/spring-cache.xsd">


	<mongo:mongo-client id="mongo" host="localhost"
		port="27017" credentials="yxj:yxj@yxj">
	</mongo:mongo-client>
	<mongo:db-factory id="mongoDbFactory" dbname="yxj"
		mongo-ref="mongo" />


	<bean id="mongoMappingContext"
		class="org.springframework.data.mongodb.core.mapping.MongoMappingContext" />
	<!-- <bean id="mappingConverter" class="org.springframework.data.mongodb.core.convert.MappingMongoConverter"> 
		<constructor-arg ref="mongoDbFactory" /> <constructor-arg ref="mongoMappingContext" 
		/> </bean> -->



	<mongo:mapping-converter id="mappingConverter"
		base-package="com.yxj.po" />
	<mongo:repositories base-package="com.yxj.dao" />
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
		<constructor-arg name="mongoConverter" ref="mappingConverter" />
	</bean>


	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:hostName="127.0.0.1" p:port="6379" />

	<bean id="stringredisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="keySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
		<property name="connectionFactory" ref="jedisConnectionFactory" />
	</bean>
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
	   <property name="keySerializer">
	      <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
	   </property>
	   <property name="valueSerializer">
	      <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
	   </property>
	   <property name="connectionFactory" ref="jedisConnectionFactory" />
	</bean>

	<!-- <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"> 
		<property name="connectionFactory" ref="jedisConnectionFactory" /> </bean> -->

	<!-- <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager" 
		c:template-ref="redisTemplate"> </bean> <cache:annotation-driven/> -->
	<context:annotation-config />
	<context:component-scan
		base-package="com.yxj.controller,com.yxj.dao,com.yxj.po,com.yxj.service,com.yxj.redis" />


</beans>